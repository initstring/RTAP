name: CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: rtap
          POSTGRES_PASSWORD: rtap
          POSTGRES_DB: rtap_ci
        options: >-
          --health-cmd "pg_isready -U rtap -d rtap_ci"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
    env:
      AUTH_SECRET: dummy_auth_secret_abcdefghijklmnopqrstuvwxyz_123456
      DATABASE_URL: postgresql://rtap:rtap@localhost:5432/rtap_ci
      TEST_DATABASE_URL: postgresql://rtap:rtap@localhost:5432/rtap_ci_test
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Wait for database
        run: npx prisma db wait --schema prisma/schema.prisma --timeout 30

      - name: Apply migrations
        run: npm run db:deploy

      - name: Check for schema drift
        run: npx prisma migrate diff --from-migrations --to-schema-datamodel prisma/schema.prisma --exit-code

      - name: Lint + Typecheck
        env:
          NODE_ENV: test
        run: npm run check

      - name: Tests with coverage
        env:
          NODE_ENV: test
        run: npm run test:coverage

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

      - name: Build
        env:
          NODE_ENV: production
        run: npm run build
